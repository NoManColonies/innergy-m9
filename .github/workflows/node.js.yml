# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  node_version: "15.x"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.node_version }}
    - uses: c-hive/gha-npm-cache@v1
    - name: Install NodeJS dependencies
      run: ls package-lock.json && npm install
    - name: Generate environment file
      run: cp .env.testing .env
    - name: Install Adonisjs/cli
      run: npm install --global @adonisjs/cli
    - name: Generate Adonis app secret key
      run: npx adonis key:generate
    # - name: Start Docker for Mongodb
#      run: docker-compose up -d
      # run: docker run -d -p 27017:27017 -e MONGO_INITDB_ROOT_USERNAME=root -e MONGO_INITDB_ROOT_PASSWORD=example mongo
#    - name: Configure mongodb admin
#      run: echo "db.createUser({ \
#                    user:\"root\", \
#                    pwd:\"example\", \
#                    roles:[ \
#                      { \
#                        role:\"userAdminAnyDatabase\", \
#                        db:\"admin\" \
#                      } \
#                    ] \
#                  })" | mongo mongo
    # - name: Configure mongodb user
    #   run: echo "db.createUser({ \
    #                 user:\"root\", \
    #                 pwd:\"example\", \
    #                 roles:[ \
    #                   { \
    #                     role:\"readWrite\", \
    #                     db:\"innergyDB\" \
    #                   } \
    #                 ], \
    #                 mechanisms:[ \
    #                   \"SCRAM-SHA-1\" \
    #                 ] \
    #               })" | mongo mongo -u root -p example --authenticationDatabase admin
    - name: Perform integration test
      run: ls package-lock.json && npm run test
